{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/scale-type-ramp.js"],"names":["sketch","context","api","document","selectedDocument","sharedStyles","doc","initVars","sketchObject","documentData","layerStyles","numberOfTextStyles","numberOfStylesSmallerThanBaseSize","calculateType","options","baseFontSize","parseInt","lineHeightFactor","parseFloat","scaleFactor","baseLineHeight","Math","round","styles","i","temp","selector","adjustedIndex","adjustedScaleFactor","pow","fontSize","lineHeight","ceil","push","paragraphStyles","findAndGetType","console","log","result","dFontSize","dLineHeight","dScaleFactor","mFontSize","mLineHeight","mScaleFactor","createWindow","alert","COSAlertWindow","new","setMessageText","addButtonWithTitle","viewWidth","viewHeight","view","NSView","alloc","initWithFrame","NSMakeRect","addAccessoryView","NSTextField","desktopTypeRampLabel","dFontSizeLabel","dLineHeightLabel","dScaleFactorLabel","mobileTypeRampLabel","mFontSizeLabel","mLineHeightLabel","mScaleFactorLabel","setStringValue","setSelectable","setEditable","setBezeled","setDrawsBackground","addSubview","findLayersMatchingPredicate_inContainer_filterByType","predicate","container","layerType","scope","MSPage","pages","filteredArrayUsingPredicate","MSArtboardGroup","nil","className","artboards","filteredArray","NSArray","array","loopPages","objectEnumerator","page","nextObject","arrayByAddingObjectsFromArray","children","findLayersWithSharedStyleNamed_inContainer","styleName","newStyle","allStyles","layerTextStyles","objects","styleSearchPredicate","NSPredicate","predicateWithFormat","filteredStyles","filteredLayers","loopStyles","style","objectID","length","checkForMatchingStyles","existingTextObjects","newStyleName","count","existingName","name","objectAtIndex","textStyle","updateToMatch","s","MSSharedStyle","initWithName_firstInstance","addSharedObject","getTextStyleAsJson","changes","definedTextStyle","attributes","color","MSAttributedStringColorAttribute","red","green","blue","alpha","String","family","NSFont","fontDescriptor","objectForKey","NSFontNameAttribute","size","par","NSParagraphStyle","align","alignment","paragraphSpacing","spacing","NSKern","text","MSAttributedStringTextTransformAttribute","textTransform","strike","NSStrikethrough","underline","NSUnderline","font","strikethrough","setTypeStyle","rectTextFrame","newText","MSTextLayer","MSColor","colorWithRed_green_blue_alpha","stringValue","fontPostscriptName","isNaN","textColor","colorWithNSColor","NSColor","colorWithGray","textAlignment","setCharacterSpacing","setLineHeight","addAttribute_value","paragraphStyle","setParagraphSpacing","reloadInspector","updateTypeStyles","styleMap","desktopRamp","ramp","forEach","calculatedStyle","token","documentStyle","startsWith","toUpperCase","settings","window","response","runModal","desktopType","mobileType"],"mappings":"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","file":"scale-type-ramp.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/scale-type-ramp.js\");\n","const sketch = context.api();\nconst document = sketch.selectedDocument;\nvar sharedStyles;\nvar doc;\n\nfunction initVars(context) {\n  // const document = sketch.selectedDocument\n  // const sharedStyles = document.sketchObject.documentData().layerStyles()\n  // doc = document.sketchObject;\n  doc = sketch.selectedDocument;\n  // sharedStyles = doc.documentData().layerTextStyles();\n  sharedStyles = document.sketchObject.documentData().layerStyles();\n}\n\n// Here are some options that I'm hard-coding for now\nconst numberOfTextStyles = 5; // This does not include paragraph styles\nconst numberOfStylesSmallerThanBaseSize = 1; // There is one style that is smaller than the base paragraph size\n\n// THIS IS THE MEAT OF THIS THING\n// ---------------------------------------------------------------------------\nvar calculateType = function(options) {\n  // Get the three values from the DOM\n  var baseFontSize = parseInt(options.baseFontSize);\n  var lineHeightFactor = parseFloat(options.lineHeightFactor);\n  var scaleFactor = parseFloat(options.scaleFactor);\n \n  // We need a base unit for line heights.\n  // We will be reusing this sucker a lot in annoyingly complicated ways which I will try to describe later.\n  // baseLineHeight is the baseFontSize times the lineHeightFactor, rounded to the nearest integer.\n  var baseLineHeight = Math.round(baseFontSize * lineHeightFactor);\n\n  // Here's an empty array where we will dump styles.\n  var styles = [];\n  // Loop five times, with the variable i as the index\n  var i = 1; // We start with h1, not h0\n  while (i <= numberOfTextStyles) {\n\n    // Here I'm going to start with a data object to which I will add style attributes\n    var temp = {};\n\n    // Add a CSS selector key/value so we know what the style is for\n    temp.selector = i;\n\n    // Calculate font size\n    \n    // This is a little complex, it determines the exponent for the scale factor for a given style\n    var adjustedIndex = ((numberOfTextStyles - numberOfStylesSmallerThanBaseSize) - i);\n\n    // Raise the scale factor exponent however many times as needed.\n    var adjustedScaleFactor = Math.pow(scaleFactor, adjustedIndex);\n\n    // Multiply the scale factor with the font size\n    temp.fontSize = Math.round(baseFontSize * adjustedScaleFactor);\n\n    // Calculate line height\n\n    // Remember the \"annoyingly complicated\" part?\n    // We want the line height to be rounded UP to the next multiple of baseLineHeight\n    temp.lineHeight = Math.ceil(temp.fontSize / baseLineHeight) * baseLineHeight;\n\n    // Ok, now push the temp object to the array\n    styles.push(temp)\n    i = i + 1;\n  }\n\n  // Pushing the paragraph styles\n  var paragraphStyles = {\n    // Paragraph CSS selector\n    selector: 'p',\n    // Paragraphs are the base font size...\n    fontSize: baseFontSize,\n    // ...and base line height.\n    lineHeight: baseLineHeight\n  };\n\n  // Stick the paragraph styles into the styles array and we're done \n  styles.push(paragraphStyles)\n  // return the array\n  return styles;\n}\n\n// Some additional notes:\n\n// The plugin will need to be able to apply different styles to desktop and mobile.\n// My initial thoughts would be to show six inputs, then run through the function twice\n// and apply the styles to the different type styles separately.\nfunction findAndGetType (options) {\n  // Get the necessary vars from the options passed in\n  var baseFontSize = options.baseFontSize;\n  var lineHeightFactor = options.lineHeightFactor;\n  var scaleFactor = options.scaleFactor;\n  \n  // Do we have what we need?\n  if (!baseFontSize || !lineHeightFactor || !scaleFactor) {\n    // We don't have all three values. Don't calc.\n    console.log('Not all values present');\n    return null;\n  } else {\n    // We have what we need, go ahead and calculate\n    var result = calculateType({\n      baseFontSize: baseFontSize,\n      lineHeightFactor: lineHeightFactor,\n      scaleFactor: scaleFactor\n    })\n    return result;\n  }\n}\n\n// Let's build a dialog box for inputs\n\nvar dFontSize, dLineHeight, dScaleFactor, mFontSize, mLineHeight, mScaleFactor;\nfunction createWindow () {\n  var alert = COSAlertWindow.new();\n\n  alert.setMessageText(\"Set Type Ramp\")\n\n  // Creating dialog buttons\n  alert.addButtonWithTitle(\"Ok\");\n  alert.addButtonWithTitle(\"Cancel\");\n\n  // Creating the view\n  var viewWidth = 300;\n  var viewHeight = 150;\n\n  var view = NSView.alloc().initWithFrame(NSMakeRect(0, 0, viewWidth, viewHeight));\n  alert.addAccessoryView(view);\n\n  var alloc = NSTextField.alloc();\n  // Creating the inputs\n  var desktopTypeRampLabel = alloc.initWithFrame(NSMakeRect(0, viewHeight - 70, viewWidth, 70));\n\n  dFontSize = alloc.initWithFrame(NSMakeRect(10, viewHeight - 60, (viewWidth/3) - 20, 20));\n  var dFontSizeLabel = alloc.initWithFrame(NSMakeRect(10, viewHeight - 40, (viewWidth/3) - 20, 20));\n\n  dLineHeight = alloc.initWithFrame(NSMakeRect(20 + (viewWidth - 40)/3, viewHeight - 60, (viewWidth/3) - 20, 20));\n  var dLineHeightLabel = alloc.initWithFrame(NSMakeRect(20 + (viewWidth - 40)/3, viewHeight - 40, (viewWidth/3) - 20, 20));\n\n  dScaleFactor = alloc.initWithFrame(NSMakeRect(30 + (2*(viewWidth - 40)/3), viewHeight - 60, (viewWidth/3) - 20, 20));\n  var dScaleFactorLabel = alloc.initWithFrame(NSMakeRect(30 + (2*(viewWidth - 40)/3), viewHeight - 40, (viewWidth/3) - 20, 20));\n\n\n  var mobileTypeRampLabel = alloc.initWithFrame(NSMakeRect(0, viewHeight -150, viewWidth, 70));\n  // Creating the inputs\n  mFontSize = alloc.initWithFrame(NSMakeRect(10, viewHeight - 140, (viewWidth/3) - 20, 20));\n  var mFontSizeLabel = alloc.initWithFrame(NSMakeRect(10, viewHeight - 120, (viewWidth/3) - 20, 20));\n\n  mLineHeight = alloc.initWithFrame(NSMakeRect(20 + (viewWidth - 40)/3, viewHeight - 140, (viewWidth/3) - 20, 20));\n  var mLineHeightLabel = alloc.initWithFrame(NSMakeRect(20 + (viewWidth - 40)/3, viewHeight - 120, (viewWidth/3) - 20, 20));\n\n  mScaleFactor = alloc.initWithFrame(NSMakeRect(30 + (2*(viewWidth - 40)/3), viewHeight - 140, (viewWidth/3) - 20, 20));\n  var mScaleFactorLabel = alloc.initWithFrame(NSMakeRect(30 + (2*(viewWidth - 40)/3), viewHeight - 120, (viewWidth/3) - 20, 20));\n\n\n  desktopTypeRampLabel.setStringValue(\"Desktop Type Ramp\");\n  desktopTypeRampLabel.setSelectable(false);\n  desktopTypeRampLabel.setEditable(false);\n  desktopTypeRampLabel.setBezeled(true);\n  desktopTypeRampLabel.setDrawsBackground(false);\n\n  dFontSizeLabel.setStringValue(\"Font Size\");\n  dFontSizeLabel.setSelectable(false);\n  dFontSizeLabel.setEditable(false);\n  dFontSizeLabel.setBezeled(false);\n  dFontSizeLabel.setDrawsBackground(false);\n\n  dLineHeightLabel.setStringValue(\"Line Height\");\n  dLineHeightLabel.setSelectable(false);\n  dLineHeightLabel.setEditable(false);\n  dLineHeightLabel.setBezeled(false);\n  dLineHeightLabel.setDrawsBackground(false);\n\n  dScaleFactorLabel.setStringValue(\"Scale Factor\");\n  dScaleFactorLabel.setSelectable(false);\n  dScaleFactorLabel.setEditable(false);\n  dScaleFactorLabel.setBezeled(false);\n  dScaleFactorLabel.setDrawsBackground(false);\n\n  mobileTypeRampLabel.setStringValue(\"Mobile Type Ramp\");\n  mobileTypeRampLabel.setSelectable(false);\n  mobileTypeRampLabel.setEditable(false);\n  mobileTypeRampLabel.setBezeled(true);\n  mobileTypeRampLabel.setDrawsBackground(false);\n\n  mFontSizeLabel.setStringValue(\"Font Size\");\n  mFontSizeLabel.setSelectable(false);\n  mFontSizeLabel.setEditable(false);\n  mFontSizeLabel.setBezeled(false);\n  mFontSizeLabel.setDrawsBackground(false);\n\n  mLineHeightLabel.setStringValue(\"Line Height\");\n  mLineHeightLabel.setSelectable(false);\n  mLineHeightLabel.setEditable(false);\n  mLineHeightLabel.setBezeled(false);\n  mLineHeightLabel.setDrawsBackground(false);\n\n  mScaleFactorLabel.setStringValue(\"Scale Factor\");\n  mScaleFactorLabel.setSelectable(false);\n  mScaleFactorLabel.setEditable(false);\n  mScaleFactorLabel.setBezeled(false);\n  mScaleFactorLabel.setDrawsBackground(false);\n\n  // Adding the labels\n  view.addSubview(desktopTypeRampLabel)\n  view.addSubview(dFontSizeLabel)\n  view.addSubview(dLineHeightLabel)\n  view.addSubview(dScaleFactorLabel)\n  view.addSubview(mobileTypeRampLabel)\n  view.addSubview(mFontSizeLabel)\n  view.addSubview(mLineHeightLabel)\n  view.addSubview(mScaleFactorLabel)\n  // Adding the textfields\n  view.addSubview(dFontSize);\n  view.addSubview(dLineHeight);\n  view.addSubview(dScaleFactor);\n  view.addSubview(mFontSize);\n  view.addSubview(mLineHeight);\n  view.addSubview(mScaleFactor);\n\n  // Show the dialog\n  return [alert]\n}\n\nvar findLayersMatchingPredicate_inContainer_filterByType = function(context, predicate, container, layerType) {\n    var scope;\n    initVars(context)\n\n    switch (layerType) {\n        case MSPage :\n            scope = doc.pages()\n            return scope.filteredArrayUsingPredicate(predicate)\n        break;\n\n        case MSArtboardGroup :\n            if(typeof container !== 'undefined' && container != nil) {\n                if (container.className == \"MSPage\") {\n                    scope = container.artboards()\n                    return scope.filteredArrayUsingPredicate(predicate)\n                }\n            } else {\n                // search all pages\n                var filteredArray = NSArray.array()\n                var loopPages = doc.pages().objectEnumerator(), page;\n                while (page = loopPages.nextObject()) {\n                    scope = page.artboards()\n                    filteredArray = filteredArray.arrayByAddingObjectsFromArray(scope.filteredArrayUsingPredicate(predicate))\n                }\n                return filteredArray\n            }\n        break;\n\n        default :\n            if(typeof container !== 'undefined' && container != nil) {\n                scope = container.children()\n                return scope.filteredArrayUsingPredicate(predicate)\n            } else {\n                var filteredArray = NSArray.array()\n                var loopPages = doc.pages().objectEnumerator(), page;\n                while (page = loopPages.nextObject()) {\n                    scope = page.children()\n                    filteredArray = filteredArray.arrayByAddingObjectsFromArray(scope.filteredArrayUsingPredicate(predicate))\n                }\n                return filteredArray\n            }\n    }\n    return NSArray.array() // Return an empty array if no matches were found\n}\n\nvar findLayersWithSharedStyleNamed_inContainer = function(context, styleName, newStyle, container) {\n    initVars(context)\n\n    // Get sharedObjectID of shared style with specified name\n    var allStyles = doc.documentData().layerTextStyles().objects()\n    var styleSearchPredicate = NSPredicate.predicateWithFormat(\"name == %@\", styleName)\n    var filteredStyles = allStyles.filteredArrayUsingPredicate(styleSearchPredicate)\n\n    var filteredLayers = NSArray.array()\n    var loopStyles = filteredStyles.objectEnumerator(), style, predicate;\n\n    while (style = loopStyles.nextObject()) {\n        predicate = NSPredicate.predicateWithFormat(\"style.sharedObjectID == %@\", style.objectID())\n        filteredLayers = filteredLayers.arrayByAddingObjectsFromArray(findLayersMatchingPredicate_inContainer_filterByType(context, predicate, container))\n    }\n\n    for (var i = 0; i < filteredLayers.length; i++) {\n        filteredLayers[i].style = newStyle;\n    }\n\n    return filteredLayers\n}\n\nfunction checkForMatchingStyles(context, existingTextObjects, newStyleName, newStyle) {\n    initVars(context)\n\n    if (existingTextObjects.count() != 0) {\n        for (var i = 0; i < existingTextObjects.count(); i++) {\n            var existingName = existingTextObjects[i].name();\n            var style = existingTextObjects.objectAtIndex(i);\n            var textStyle;\n\n            if(existingName == newStyleName) {\n                existingTextObjects[i].updateToMatch(newStyle)\n                return;\n            }\n        }\n\n        var s = MSSharedStyle.alloc().initWithName_firstInstance(newStyleName,newStyle);\n        sharedStyles.addSharedObject(s);\n\n    } else {\n        var s = MSSharedStyle.alloc().initWithName_firstInstance(newStyleName,newStyle);\n        sharedStyles.addSharedObject(s);\n    }\n}\n\nfunction getTextStyleAsJson (style, changes) {\n  var definedTextStyle = {};\n  definedTextStyle.attributes = style.style().textStyle().attributes();\n\n  var color = definedTextStyle.attributes.MSAttributedStringColorAttribute;\n\n  if (color != null) {\n      var red = color.red();\n      var green = color.green();\n      var blue = color.blue();\n      var alpha = color.alpha();\n  }\n\n  var name = String(style.name());\n  var family = String(definedTextStyle.attributes.NSFont.fontDescriptor().objectForKey(NSFontNameAttribute))\n  var size = changes.size\n\n  var par = definedTextStyle.attributes.NSParagraphStyle;\n\n  if (par != null) {\n      var align = par.alignment();\n      var lineHeight = changes.lineHeight;\n      var paragraphSpacing = par.paragraphSpacing();\n  }\n\n  var spacing = String(definedTextStyle.attributes.NSKern) * 1;\n\n  var text = definedTextStyle.attributes.MSAttributedStringTextTransformAttribute;\n\n  if (text != null) {\n      var textTransform = String(definedTextStyle.attributes.MSAttributedStringTextTransformAttribute) * 1;\n  } else {\n      var textTransform = 0;\n  }\n\n  var strike = String(definedTextStyle.attributes.NSStrikethrough) * 1\n  var underline = String(definedTextStyle.attributes.NSUnderline) * 1\n\n  var style = {\n    name: name,\n    font: family,\n    size: size,\n    color: {\n        red: red,\n        green: green,\n        blue: blue,\n        alpha: alpha\n    },\n    alignment: align,\n    spacing: spacing,\n    lineHeight: lineHeight,\n    paragraphSpacing: paragraphSpacing,\n    textTransform: textTransform,\n    strikethrough: strike,\n    underline: underline\n  };\n\n  return style;\n}\n\nfunction setTypeStyle (style) {\n  var size = style.size;\n  var family = style.font;\n  var name = style.name;\n\n  var red = style.color.red;\n  var green = style.color.green;\n  var blue = style.color.blue;\n  var alpha = style.color.alpha;\n\n  var align = style.alignment || 0;\n  var spacing = style.spacing || 0;\n  var paragraphSpacing = style.paragraphSpacing || 0;\n  var lineHeight = style.lineHeight || 0;\n\n  var textTransform = style.textTransform || 0;\n\n  var strikethrough = style.strikethrough || 0;\n  var underline = style.underline || 0;\n\n  var rectTextFrame = NSMakeRect(0, 0, 250, 50);\n  var newText = doc.MSTextLayer().initWithFrame(rectTextFrame);\n\n  var color = MSColor.colorWithRed_green_blue_alpha(red, green, blue, alpha);\n\n  newText.name = name;\n  newText.stringValue = name + ' ' + size + 'px';\n  newText.fontSize = size;\n  newText.fontPostscriptName = family;\n\n  if (isNaN(red) != true) {\n      newText.textColor = color;\n  } else {\n      newText.textColor = MSColor.colorWithNSColor(NSColor.colorWithGray(0.0));\n  }\n\n  newText.textAlignment = align;\n  newText.setCharacterSpacing(spacing);\n  newText.setLineHeight(lineHeight);\n  newText.addAttribute_value(\"MSAttributedStringTextTransformAttribute\", textTransform)\n\n  var paragraphStyle = newText.paragraphStyle();\n  paragraphStyle.setParagraphSpacing(paragraphSpacing);\n  newText.addAttribute_value(\"NSParagraphStyle\", paragraphStyle);\n\n  newText.addAttribute_value(\"NSStrikethrough\", strikethrough);\n  newText.addAttribute_value(\"NSUnderline\", underline);\n\n  checkForMatchingStyles(context, sharedStyles.objects(), name, newText.style());\n  findLayersWithSharedStyleNamed_inContainer(context, newText.name() , newText.style())\n\n  doc.reloadInspector()\n}\n\nfunction updateTypeStyles(styleMap, desktopRamp) {\n  var ramp = \"m\";\n  if (desktopRamp == \"desktop\") {\n    ramp = \"d\";\n  }\n  styleMap.forEach(function(calculatedStyle){\n    var token = \"[\" + ramp + calculatedStyle.selector;\n    var changes = {\n      size: calculatedStyle.fontSize,\n      lineHeight: calculatedStyle.lineHeight\n    }\n    console.log(changes)\n\n    sharedStyles.objects().forEach((documentStyle) => {\n      // Get matching style\n      if (String(documentStyle.name()).startsWith(String(token).toUpperCase())) {\n        var style = getTextStyleAsJson(documentStyle, changes);\n        console.log(style);\n        setTypeStyle(style)\n      }\n    });\n  });\n}\n\nfunction settings(context){\n  var window = createWindow(context);\n  var alert = window[0]; \n\n  var response = alert.runModal()\n  if (response === 1000) {\n    // They clicked OK\n\n    var desktopType = null;\n    var mobileType = null;\n    \n\n    desktopType = findAndGetType({\n      baseFontSize: parseInt(dFontSize.stringValue()),\n      lineHeightFactor: parseFloat(dLineHeight.stringValue()),\n      scaleFactor: parseFloat(dScaleFactor.stringValue())\n    })\n    mobileType = findAndGetType({\n      baseFontSize: parseInt(mFontSize.stringValue()),\n      lineHeightFactor: parseFloat(mLineHeight.stringValue()),\n      scaleFactor: parseFloat(mScaleFactor.stringValue())\n    })\n    \n    // Log the results to the console\n    console.log(\"desktop type:\", desktopType)\n    console.log(\"mobile type:\", mobileType)\n    if (desktopType) {\n      updateTypeStyles(desktopType, \"desktop\")\n    }\n    if (mobileType) {\n      updateTypeStyles(mobileType)\n    }\n  }\n}\nsettings()\n"],"sourceRoot":""}